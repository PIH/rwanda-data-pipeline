
- name: Create user group
  group: name={{ rdp_user }} state=present

- name: Create user
  user: name={{ rdp_user }} groups={{ rdp_user_group }} state=present shell=/bin/bash

- name: Home directory
  file: path={{ rdp_user_home }} state=directory owner={{ rdp_user }} group={{ rdp_user_group }}

- name: Scripts directory
  file: path={{ rdp_scripts_dir }} state=directory owner={{ rdp_user }} group={{ rdp_user_group }}

- name: Bin directory
  file: path={{ rdp_bin_dir }} state=directory owner={{ rdp_user }} group={{ rdp_user_group }}

- name: Copy scripts
  copy: src=../../scripts/ dest={{ rdp_scripts_dir }} owner={{ rdp_user }} group={{ rdp_user_group }} mode=preserve

- name: Install 7zip
  apt: name=p7zip-full state=latest

- name: Install docker
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - docker.io

- name: Add directory for each DB to restore
  file: path={{ rdp_restore_db_dir }}/{{ item.restoreId }} state=directory owner={{ rdp_user }} group={{ rdp_user_group }}
  with_items:
    - "{{ rdp_restore_dbs }}"

- name: Add restoration scripts for each MySQL Xtrabackup
  template: src=xtrabackup.env dest={{ rdp_restore_db_dir }}/{{ item.restoreId }}/restore.env mode=preserve
  with_items:
    - "{{ rdp_restore_dbs }}"
  when: item.backupType == "xtrabackup"

- name: Add restoration scripts for each Postgres dump
  template: src=pgdump.env dest={{ rdp_restore_db_dir }}/{{ item.restoreId }}/restore.env mode=preserve
  with_items:
    - "{{ rdp_restore_dbs }}"
  when: item.backupType == "pgdump"

- name: Ensure Cron is installed
  apt: name=cron-apt state=present

- name: Add cron script
  template: src=restore.sh dest={{ rdp_bin_dir }}/restore.sh owner={{ rdp_user }} group={{ rdp_user_group }} mode=0755

- name: Add appropriate lines to restore.sh
  lineinfile: dest={{ rdp_bin_dir }}/restore.sh line='(echo "Restoring {{ item.restoreId }}"; source {{ rdp_restore_db_dir }}/{{ item.restoreId }}/restore.env; /bin/bash {{ rdp_scripts_dir }}/restore-{{ item.backupType }}.sh)'
  with_items:
    - "{{ rdp_restore_dbs }}"

- name: Setup cron
  cron: name="Restore DBs" minute="{{ rdp_restore_cron_minute }}" hour="{{ rdp_restore_cron_hour }}" weekday="{{ rdp_restore_cron_weekday }}" user="{{ rdp_restore_cron_user }}" job="exec >> {{ rdp_log_file }} 2>&1 && {{ rdp_bin_dir }}/restore.sh"
